# -*- coding: utf-8 -*-
"""ListaExercicio4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10dJOT_3_iHvHGnpk58i5sYLQBfMmLUq9

# ðŸ“Š Projeto Final â€“ AnÃ¡lise ContÃ¡bil com Ajuste EconÃ´mico

Este projeto tem como objetivo integrar anÃ¡lise de dados contÃ¡beis de empresas com indicadores econÃ´micos, utilizando Python, Pandas, Ipeadata e Streamlit.

1) Configure o tÃ­tulo na barra do navegador, da pÃ¡gina do projeto no Streamlit e descriÃ§Ã£o inicial do projeto (peso: 1,0)

- TÃ­tulo na barra (`page_title`): Lista de ExercÃ­cios 4
- TÃ­tulo da pÃ¡gina (`header`): Projeto Final â€“ AnÃ¡lise ContÃ¡bil com Ajuste EconÃ´mico
- DescriÃ§Ã£o projeto (`write`): Este projeto tem como objetivo integrar anÃ¡lise de dados contÃ¡beis de empresas com indicadores econÃ´micos, utilizando Python, Pandas, Ipeadata e Streamlit.
"""

!pip install streamlit

import streamlit as st
st.set_page_config(
    page_title="Lista de ExercÃ­cios 4",
    layout="centered"
)
st.title("Projeto Final - AnÃ¡lise ContÃ¡bil com Ajuste EconÃ´mico")
st.write("""
Este projeto tem como objetivo integrar anÃ¡lise de dados contÃ¡beis de empresas com indicadores econÃ´micos,
utilizando Python, Pandas, Ipeadata e Streamlit.
""")

"""2) Importe os dados do arquivo empresas_dados.csv utilizando pandas e apresente todas as linhas da df (peso: 1,0)

Dica: Utilize `head(len(df))`
"""

import pandas as pd
df = pd.read_csv("empresas_dados.csv", sep=";")
df.head(len(df))

"""3) Calcule os indicadores Margem LÃ­quida e ROA e salve como novas coluna da df. Depois apresente os dois indicadores no mesmo grÃ¡fico de linhas, agrupado por Ano  (peso: 1,0)

- Margem LÃ­quida = Lucro LÃ­quido / Receita LÃ­quida * 100
- ROA = Lucro LÃ­quido / Ativo Total *  100
"""

df["Margem LÃ­quida"] = (df["Lucro LÃ­quido"] / df["Receita LÃ­quida"]) * 100
df["ROA"] = (df["Lucro LÃ­quido"] / df["Ativo Total"]) * 100
df_agrupado = df.groupby("Ano")[['Margem LÃ­quida', 'ROA']].mean().reset_index()

import matplotlib.pyplot as plt
plt.figure(figsize=(10, 6))
plt.plot(df_agrupado["Ano"], df_agrupado["Margem LÃ­quida"], marker='o', label="Margem LÃ­quida")
plt.plot(df_agrupado["Ano"], df_agrupado["ROA"], marker='s', label="ROA", linestyle='--' )

plt.title('Margem LÃ­quida e ROA por Ano')
plt.xlabel('Ano')
plt.ylabel('Indicador (%)')
plt.legend()
plt.grid(True)
plt.show()

"""4) Utilize o pacote ipeadatapy e faÃ§a busca para encontrar o indicador que traga o IPCA, taxa de variaÃ§Ã£o, em % e anual: (peso: 2,0)

- Baixe os dados no perÃ­odo de 2010 a 2024
- Altere o nome da coluna "YEAR" para "Ano"
- Altere o nome da coluna "VALUE ((% a.a.))" para "IPCA"
- Apresente a df para checar se tudo deu certo
"""

!pip install ipeadatapy
import ipeadatapy as ip

df = ip.timeseries('PRECOS12_IPCA12')
df = df.reset_index()
df = df[(df['YEAR'] >= 2010) & (df['YEAR'] <= 2024)]
df = df.rename(columns={'YEAR': 'Ano','VALUE ((% a.a.))': 'IPCA'})
print(df)

"""5) Combine as duas df (Excel e IPEA) em uma nova df e calcule nova coluna chamada Receita Real (peso: 2,0)

- Utilize a funÃ§Ã£o `pd.merge()` para unificar as duas df utiilizando a coluna Ano como conexÃ£o (chave primÃ¡ria) entre elas
- Crie nova coluna chamada Receita Real que serÃ¡ o resultado da Receita LÃ­quida de cada ano deduzido o IPCA do ano: `Receita Real = Receitta LÃ­quida - ( Receita LÃ­quida * (IPCA/100) )`
- Apresente a nova df combinada

"""

df_excel = pd.DataFrame({'Ano': [2020, 2021, 2022],'Receita LÃ­quida': [100000, 120000, 150000]})

df_ipea = pd.DataFrame({'Ano': [2020, 2021, 2022],'IPCA': [4.5, 10.1, 5.8]})
df_combinada = pd.merge(df_excel, df_ipea, on='Ano')
df_combinada['Receita Real'] = df_combinada['Receita LÃ­quida'] * (1 - df_combinada['IPCA'] / 100)
print(df_combinada)

"""6) Crie grÃ¡fico de linha que apresente as variÃ¡veis Receita LÃ­quida e Receita Real ao longo dos anos (no mesmo grÃ¡fico) (peso: 1,0)"""

df_receita_liquida = df_combinada.groupby('Ano')["Receita LÃ­quida"].mean()
df_receita_real = df_combinada.groupby("Ano")["Receita Real"].mean()
plt.plot(df_receita_liquida, label="Receita LÃ­quida")
plt.plot(df_receita_real, label="Receita Real")
plt.xlabel("Ano")
plt.ylabel("Valor (mÃ©dio)")
plt.title("Receita LÃ­quida e Receita Real ao longo dos anos")
plt.legend()
plt.tight_layout()
plt.show()

"""7) FaÃ§a os ajustes necessÃ¡rios e leve este projeto para a web usando GitHub e Streamlit (peso: 2,0)

- CaÃ§a os ajustes necessÃ¡rios no projeto para ser publicado no Streamlit
- Crie novo repositÃ³rio pÃºblico no GitHub e leve os arquivos .py e .csv pra lÃ¡. Aproveite e crie o arquivo requirements.txt com os pacotes utilizados no projeto
- Crie novo projeto no Streamlit e associe ao repositÃ³rio da lista
"""

